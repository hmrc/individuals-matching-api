openapi: 3.0.3
info:
  title: Individuals Matching
  contact: {}
  version: '1.0'
  description: |
    # Overview
    Use this API to check HMRC records to find out information about an individual.

    The current version of the API lets you:
  
    * search for an individual using their name, date of birth and National Insurance number
    * get a link you can use to check if they're a Scottish resident for tax purposes
    
    # Testing
    You can use the sandbox environment to [test this API](https://developer.service.hmrc.gov.uk/api-documentation/docs/testing). It does not support [stateful behaviour](https://developer.service.hmrc.gov.uk/api-documentation/docs/testing/stateful-behaviour).

    The Sandbox service for this API supports all the happy path responses and error scenarios described under Resources.

    You can set up a test individual for this API using the [Create Test User API](https://developer.service.hmrc.gov.uk/api-documentation/docs/api/service/api-platform-test-user/1.0#_create-a-test-user-which-is-an-individual_post_accordion).

servers:
- url: https://api.service.hmrc.gov.uk
  variables: {}

paths:
  /individuals/matching/:
    post:
      tags:
      - individuals
      summary: Search HMRC’s records for a individual
      description: "
        Search HMRC’s records for an individual by their name, date of birth and National Insurance number.


        A successful search will return a link you can use to check an individual’s information.
        
        \n#### Authorisation

        \nThis endpoint is [user-restricted](https://developer.service.hmrc.gov.uk/api-documentation/docs/authorisation/user-restricted-endpoints) and requires `read:individuals-matching` header containing an OAUTH 2.0 Bearer Token.

        \nSee also [fraud prevention](https://developer.service.hmrc.gov.uk/guides/fraud-prevention/)."
      operationId: SearchHMRC’srecordsforaindividual
      parameters:
      - name: Authorization
        in: header
        description: OAuth 2.0 Bearer Token with the read:individuals-matching scope.
        required: true
        style: simple
        schema:
          type: string
          example: Bearer <BEARER_TOKEN>
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/IndividualsMatchingrequest'
              - example:
                  nino: BB123456B
                  firstName: John
                  lastName: Smith
                  dateOfBirth: 1975-05-25
            example:
              nino: BB123456B
              firstName: John
              lastName: Smith
              dateOfBirth: 1975-05-25
        required: true
      responses:
        '200':
          description: The individual information provided has matched with HMRC records.
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IndividualsMatchingresponse'
                - example:
                    _links:
                      individual:
                        href: /individuals/matching/57072660-1df9-4aeb-b4ea-cd2d7f96e430
                        name: GET
                        title: Individual Details
                      self:
                        href: /individuals/matching/
              example:
                _links:
                  individual:
                    href: /individuals/matching/57072660-1df9-4aeb-b4ea-cd2d7f96e430
                    name: GET
                    title: Individual Details
                  self:
                    href: /individuals/matching/
        '400':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IndividualsMatchingresponse400'
                - example:
                    code: BAD_REQUEST
                    message: Bad Request
              examples:
                notOpenStatus:
                  description: Bad Request
                  value:
                    code: BAD_REQUEST
                    message: Bad Request
        '403':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IndividualsMatchingresponse403'
                - description: The individual details provided did not match with HMRC’s records.
                  example:
                    code: MATCHING_FAILED
                    message: The individual details provided did not match with HMRC’s records.
              example:
                code: MATCHING_FAILED
                message: The individual details provided did not match with HMRC’s records.
        '404':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IndividualsMatchingresponse404'
                - example:
                    code: NOT_FOUND
                    message: Resource Not Found
              examples:
                ResourceNotFound:
                  description: Resource Not Found
                  value:
                    code: NOT_FOUND
                    message: Resource Not Found
        '406':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IndividualsMatchingresponse406'
                - example:
                    code: ACCEPT_HEADER_INVALID
                    message: Accept header invalid
              examples:
                headerInvalid:
                  description: Accept header invalid
                  value:
                    code: ACCEPT_HEADER_INVALID
                    message: Accept header invalid
        '500':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IndividualsMatchingresponse500'
                - example:
                    code: INTERNAL_SERVER_ERROR
                    message: Internal Server Error
              examples:
                internalServerError:
                  description: Internal Server Error
                  value:
                    code: INTERNAL_SERVER_ERROR
                    message: Internal Server Error
      deprecated: false
      security:
        - userRestricted: [ "read:individuals-matching" ]
  /individuals/matching/{matchId}:
    get:
      tags:
      - individuals
      summary: Check a individual’s information
      description: "
        Returns a URL you can use to check a individual’s information. Currently, the only check available is to

        check if the individual is a Scottish taxpayer.


        The URL is only valid for a limited period of time. After expiry a 404 will be returned if accessed.
        
        \n#### Authorisation

                \nThis endpoint is [user-restricted](https://developer.service.hmrc.gov.uk/api-documentation/docs/authorisation/user-restricted-endpoints) and requires `read:individuals-matching` header containing an OAUTH 2.0 Bearer Token.

                \nSee also [fraud prevention](https://developer.service.hmrc.gov.uk/guides/fraud-prevention/)."
      operationId: Checkaindividual’sinformation
      parameters:
      - name: matchId
        in: path
        description: ''
        required: true
        style: simple
        schema:
          pattern: ^[0-9A-Fa-f]{8}(-[0-9A-Fa-f]{4}){3}-[0-9A-Fa-f]{12}$
          type: string
          example: 6b853b58-625f-4e64-955e-43a7cdff5c03
      - name: Authorization
        in: header
        description: OAuth 2.0 Bearer Token with the read:individuals-matching scope.
        required: true
        style: simple
        schema:
          type: string
          example: Bearer <BEARER_TOKEN>
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IndividualsMatchingresponse1'
                - example:
                    _links:
                    - name: self
                      href: /individuals/matching/633e0ee7-315b-49e6-baed-d79c3dffe467
                    - name: relief-at-source
                      href: /relief-at-source/individual/633e0ee7-315b-49e6-baed-d79c3dffe467/residency-status
              example:
                _links:
                - name: self
                  href: /individuals/matching/633e0ee7-315b-49e6-baed-d79c3dffe467
                - name: relief-at-source
                  href: /relief-at-source/individual/633e0ee7-315b-49e6-baed-d79c3dffe467/residency-status
        '403':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IndividualsMatchingresponse400'
                - description: >
                    The match has timed out and the UUID is no longer valid.

                    The match (POST to /match) will need to repeated.
                  example:
                    code: INVALID_UUID
                    message: The match has timed out and the UUID is no longer valid. The match (POST to /match) will need to repeated.
              example:
                code: INVALID_UUID
                message: The match has timed out and the UUID is no longer valid. The match (POST to /match) will need to repeated.
        '404':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IndividualsMatchingresponse404'
                - example:
                    code: NOT_FOUND
                    message: Resource Not Found
              examples:
                ResourceNotFound:
                  description: Resource Not Found
                  value:
                    code: NOT_FOUND
                    message: Resource Not Found
        '406':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IndividualsMatchingresponse406'
                - example:
                    code: ACCEPT_HEADER_INVALID
                    message: Accept header invalid
              examples:
                headerInvalid:
                  description: Accept header invalid
                  value:
                    code: ACCEPT_HEADER_INVALID
                    message: Accept header invalid
        '500':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/IndividualsMatchingresponse500'
                - example:
                    code: INTERNAL_SERVER_ERROR
                    message: Internal Server Error
              examples:
                internalServerError:
                  description: Internal Server Error
                  value:
                    code: INTERNAL_SERVER_ERROR
                    message: Internal Server Error
      deprecated: false
      security:
        - userRestricted: [ "read:individuals-matching" ]
components:
  securitySchemes:
    userRestricted:
      type: oauth2
      description: |
        HMRC supports OAuth 2.0 for authenticating user restricted API requests using an OAuth 2.0 Bearer Token in the AUTHORIZATION header.
        See https://developer.service.hmrc.gov.uk/api-documentation/docs/authorisation/user-restricted-endpoints for details.
      flows:
        authorizationCode:
          authorizationUrl: https://api.service.hmrc.gov.uk/oauth/authorize
          tokenUrl: https://api.service.hmrc.gov.uk/oauth/token
          refreshUrl: https://api.service.hmrc.gov.uk/oauth/refresh
          scopes: {
            read:individuals-matching: Match individual from their details,
            read:individuals-matching-laa-c1: Scope for LAA use case 1 to match an individual from their details,
            read:individuals-matching-laa-c2: Scope for LAA use case 2 to match an individual from their details,
            read:individuals-matching-laa-c3: Scope for LAA use case 3 to match an individual from their details,
            read:individuals-matching-laa-c4: Scope for LAA use case 4 to match an individual from their details,
            read:individuals-matching-hmcts-c2: Scope for HMCTS use case 2 to match an individual from their details,
            read:individuals-matching-hmcts-c3: Scope for HMCTS use case 3 to match an individual from their details,
            read:individuals-matching-hmcts-c4: Scope for HMCTS use case 4 to match an individual from their details,
            read:individuals-matching-lsani-c1: Scope for LSANI use case 1 to match an individual from their details,
            read:individuals-matching-lsani-c3: Scope for LSANI use case 3 to match an individual from their details,
            read:individuals-matching-nictsejo-c4: Scope for NICTSEJO use case 4 to match an individual from their details,
            read:individuals-matching-ho-rp2: Scope for HO RP2 to match an individual from their details,
            read:individuals-matching-ho-ecp: Scope for HO ECP to match an individual from their details,
            read:individuals-matching-ho-v2: Scope for HO that replicates the v1 version of the same scope,
            assigned: An OAuth 2.0 Bearer Token with the scopes you have been assigned
          }
  schemas:
    IndividualsMatchingrequest:
      title: IndividualsMatchingrequest
      required:
      - nino
      - firstName
      - lastName
      - dateOfBirth
      type: object
      properties:
        nino:
          pattern: ^((?!(BG|GB|KN|NK|NT|TN|ZZ)|(D|F|I|Q|U|V)[A-Z]|[A-Z](D|F|I|O|Q|U|V))[A-Z]{2})[0-9]{6}[A-D]?$
          type: string
          description: The individual's national insurance number
          example: BC123456
        firstName:
          pattern: ^[a-zA-Z &`\-\'^]{1,35}$
          type: string
          description: The individuals’s first name.
          example: FirstNameMe
        lastName:
          pattern: ^[a-zA-Z &`\-\'^]{1,35}$
          type: string
          description: The individual’s last name.
          example: lastNameDough
        dateOfBirth:
          pattern: ^\d{4}-\d{2}-\d{2}$
          type: string
          description: The individual's date of birth
          example: 1989-04-22
    IndividualsMatchingresponse:
      title: IndividualsMatchingresponse
      required:
      - _links
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
      description: Matched Individual
    Links:
      title: Links
      required:
      - individual
      - self
      type: object
      properties:
        individual:
          allOf:
          - $ref: '#/components/schemas/Individual'
          - description: The URI for the resource to get the individual's available information.
        self:
          allOf:
          - $ref: '#/components/schemas/Self'
          - description: The URI to this resource
    Individual:
      title: Individual
      required:
      - href
      type: object
      properties:
        href:
          type: string
          example: /individuals/matching/57072660-1df9-4aeb-b4ea-cd2d7f96e430
        name:
          type: string
          example: GET
        title:
          type: string
          example: Individual Details
      description: The URI for the resource to get the individual's available information.
    Self:
      title: Self
      required:
      - href
      type: object
      properties:
        href:
          type: string
          example: /individuals/matching/
      description: The URI to this resource
    IndividualsMatchingresponse400:
      title: IndividualsMatchingresponse400
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: string
          description: BAD_REQUEST
        message:
          type: string
          description: Bad Request
    IndividualsMatchingresponse403:
      title: IndividualsMatchingresponse403
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          description: INVALID_UUID
        message:
          type: string
          description: Invalid UUID
    IndividualsMatchingresponse404:
      title: IndividualsMatchingresponse404
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          description: NOT_FOUND
        message:
          type: string
          description: Resource Not Found
    IndividualsMatchingresponse406:
      title: IndividualsMatchingresponse406
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          description: ACCEPT_HEADER_INVALID
        message:
          type: string
          description: Accept header invalid
    IndividualsMatchingresponse500:
      title: IndividualsMatchingresponse500
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          description: INTERNAL_SERVER_ERROR
        message:
          type: string
          description: Internal Server Error
    IndividualsMatchingresponse1:
      title: IndividualsMatchingresponse1
      required:
      - _links
      type: object
      properties:
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Links1'
          description: ''
      example:
        _links:
        - name: self
          href: /individuals/matching/633e0ee7-315b-49e6-baed-d79c3dffe467
        - name: relief-at-source
          href: /relief-at-source/individual/633e0ee7-315b-49e6-baed-d79c3dffe467/residency-status
    Links1:
      title: Links1
      required:
      - name
      - href
      type: object
      properties:
        name:
          type: string
          description: "For example: \"GET\""
        href:
          type: string
          description: "For example: /individuals/matching/57072660-1df9-4aeb-b4ea-cd2d7f96e430"
      example:
        name: self
        href: /individuals/matching/633e0ee7-315b-49e6-baed-d79c3dffe467
tags:
- name: individuals
  description: ''
